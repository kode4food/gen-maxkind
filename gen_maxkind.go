package main

import (
	"fmt"
	"go/format"
	"os"
	"path/filepath"
	"reflect"
	"strings"
)

func main() {
	pkg := "maxkind"
	out := "maxkind/value_generated.go"

	// Find max reflect.Kind value
	maxKind := findMaxKind()

	// Generate code
	src := fmt.Sprintf(`// Code generated by gen_maxkind.go; DO NOT EDIT.
package %s

// Value is the largest integer value in reflect.Kind for this Go version.
const Value = %d
`, pkg, maxKind)

	formatted, err := format.Source([]byte(src))
	if err != nil {
		panic(err)
	}

	// Create the output directory if it doesn't exist
	if err := os.MkdirAll(filepath.Dir(out), 0755); err != nil {
		panic(err)
	}

	if err := os.WriteFile(out, formatted, 0644); err != nil {
		panic(err)
	}

	fmt.Printf("MaxKindValue = %d written to %s\n", maxKind, out)
}

func findMaxKind() int {
	max := 0
	for i := range 1024 {
		k := reflect.Kind(i).String()
		if strings.HasPrefix(k, "kind") {
			continue
		}
		if i > max {
			max = i
		}
	}
	return max
}
